import os
import asyncio
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, CallbackQueryHandler, ContextTypes
from keep_alive import keep_alive

TOKEN = os.getenv('TOKEN')

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [[InlineKeyboardButton("üö® –§–∏—à–∫–∞ ‚û°Ô∏è", callback_data='fishka')]]
    reply_markup = InlineKeyboardMarkup(keyboard)

    message = await update.message.reply_text("üö® –§–∏—à–∫–∞ ‚û°Ô∏è", reply_markup=reply_markup)

    # –û–∂–∏–¥–∞–Ω–∏–µ 5 –º–∏–Ω—É—Ç (300 —Å–µ–∫—É–Ω–¥)
    await asyncio.sleep(3)

    # –ü–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
    try:
        await context.bot.delete_message(chat_id=update.effective_chat.id, message_id=message.message_id)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

# –ù–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É
async def button(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    message = await context.bot.send_message(chat_id=query.message.chat_id, text="–§–ò–®–ö–ê!!!")

    # –û–∂–∏–¥–∞–Ω–∏–µ 5 –º–∏–Ω—É—Ç (300 —Å–µ–∫—É–Ω–¥)
    await asyncio.sleep(3)

    # –ü–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
    try:
        await context.bot.delete_message(chat_id=query.message.chat_id, message_id=message.message_id)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
app = ApplicationBuilder().token(TOKEN).build()

app.add_handler(CommandHandler('start', start))
app.add_handler(CallbackQueryHandler(button))

keep_alive()
print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
app.run_polling()
